<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<context id="Mysql" targetRuntime="MyBatis3Simple"
		defaultModelType="flat">

		<plugin type="tk.mybatis.mapper.generator.MapperPlugin">
			<property name="mappers"
				value="tk.mybatis.mapper.common.Mapper" />
			<!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true -->
			<property name="caseSensitive" value="true" />
		</plugin>

		<jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
			connectionURL="jdbc:mysql://47.107.51.167:3306/checkin_database" userId="root"
			password="root">
			<!-- 解决mysql驱动8.0版本会生成多个库下的表问题,例如A库和B库都有user表，如果value为false，那么会生成这两个表的user表，不能指定生成A库或者B库的 -->
			<property name="nullCatalogMeansCurrent" value="true" />
		</jdbcConnection>

		<!-- 生成实体类的配置，是一个必须配置的内容。 -->
		<javaModelGenerator targetPackage="cn.ssm.model"
			targetProject=".\src\main\java" />
		<!-- sqlMapGenerator是一个可选的配置，配置后可以生成Mapper接口对应的XML文件。 -->
		<sqlMapGenerator targetPackage="cn.ssm.mapper"
			targetProject=".\src\main\java" />
		<!-- 通用Mapper接口的配置，配置javaClientGenerator后会生成对应的接口文件，该接口会自动继承前面配置的通用Mapper接口。 -->
		<javaClientGenerator targetPackage="cn.ssm.mapper"
			targetProject=".\src\main\java" type="XMLMAPPER" />

		<!-- 最后一个配置table,这里使用SQL通配符%来匹配所有表。generatedKey意味着所有的表都有一个id自增的主键，在生成实体类的时候会根据该配置生成相应的注解。 -->
		<!-- <table tableName="my_contact"> 可以不配置，比如student有个主键stu_id，生成的entity会多一句 
			@GeneratedValue(strategy = GenerationType.IDENTITY) <generatedKey column="stu_id" 
			sqlStatement="Mysql" identity="true" /> </table> -->

		<table tableName="%"></table>
	</context>
</generatorConfiguration>